<?php

namespace Wizardalley\UserBundle\Entity;
use Wizardalley\UserBundle\Entity\WizardUser;
use Doctrine\ORM\EntityRepository;

/**
 * UserConnectedRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class WizardUserRepository extends EntityRepository
{

    public function findFriends($user){


        $sql = "
        select distinct w.username, w.id,w.path_profile
            from friends f1
                left join friends f2 on f2.user_id = f1.friend_user_id 
                left join wizard_user w on w.id = f2.user_id
            where
                f2.friend_user_id = ? and
                f1.user_id = ?
                ";
        $conn = $this->getEntityManager()->getConnection();
        $stmt = $conn->prepare($sql);
        $result = $stmt->execute(array($user->getId(),$user->getId()));
        return $stmt->fetchAll();
    }
    
    public function findPublicationUser(WizardUser $user,$offset, $limit){
        $sql = "
            (select pu.id as 'publication_id', pu.datePublication, pu.title, pu.content, pa.id as 'writer_id', pa.name, pa.path_profile, 'page_publication' as type
            from publication pu 
              left join page pa on pu.page_id = pa.id 
              left join page_user_follow puf on puf.page_id = pa.id
            where puf.wizard_user_id = :user_id_1)
            UNION
            (select pu.id as 'publication_id', pu.datePublication, '' as title, pu.content, w.id as 'writer_id', w.username as 'name', w.path_profile, 'user_publication' as type
            from small_publication pu
            join wizard_user w on w.id = pu.user_id
            join friends f1 on f1.user_id = pu.user_id
            join friends f2 on f1.friend_user_id = f2.user_id
             where f1.user_id = :user_id_2
            )
            ORDER BY datePublication DESC
            LIMIT ".$offset.", ".$limit."
            ";
        $conn = $this->getEntityManager()->getConnection();
        $stmt = $conn->prepare($sql);
        $result = $stmt->execute(array(
            'user_id_1' => $user->getId(),
            'user_id_2' => $user->getId()
        ));
        return $stmt->fetchAll();
    }
}
